rec = ""
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
View(rec)
View(rec_temp)
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
rec
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec = data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
rec
library(yaml)
rec = ""
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
View(rec)
library(yaml)
rec = ""
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
View(rec)
ibrary(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
rec
View(rec)
View(rec_temp)
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
library(yaml)
rec = ""
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
library(yaml)
rec <- data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
if(rec == ""){
rec <- data.frame(t(unlist(rec_temp)))
}else{
print("entrou no else")
rbind(rec,unlist(rec_temp))
}
}
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
view(rec)
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rec <- data.frame(t(unlist(rec_temp)))
rbind(rec,unlist(rec_temp))
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
if (nrow(rec) == 0) {
rec <- data.frame(t(unlist(rec_temp)))
}else {
rbind(rec,unlist(rec_temp))
}
print(files[i])
}
rec
View(rec)
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rbind(rec,unlist(rec_temp))
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rec = rbind(rec,unlist(rec_temp))
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
if (nrow(rec) == 0) {
rec <- data.frame(t(unlist(rec_temp)))
} else{
rec = rbind(rec,unlist(rec_temp))
}
print(files[i])
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
if (nrow(rec) == 0) {
rec <- data.frame(t(unlist(rec_temp)))
} else{
rec = rbind(rec,unlist(rec_temp))
}
print(files[i])
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
if (nrow(rec) == 0) {
rec <- data.frame(t(unlist(rec_temp)))
} else{
rec = rbind(rec,unlist(rec_temp))
}
print(files[i])
}
rec
View(rec)
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
if (nrow(rec) == 0) {
rec <- data.frame(t(unlist(rec_temp)))
} else{
rec = rbind(rec,unlist(rec_temp))
}
print(files[i])
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
if (nrow(rec) == 0) {
rec <- data.frame(t(unlist(rec_temp)))
} else{
rec = rbind(rec,unlist(rec_temp))
}
print(files[i])
}
rec
library(yaml)
rec = data.frame(stringsAsFactors = FALSE)
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
if (nrow(rec) == 0) {
rec <- data.frame(t(unlist(rec_temp)))
} else{
rec = rbind(rec,unlist(rec_temp))
}
print(files[i])
}
rec
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rec = rbind(rec,data.frame(unlist(rec_temp)))
}
rec
View(rec)
View(rec)
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rec = rbind(rec,data.frame(unlist(rec_temp)))
}
aux <- data.frame(t(rec))
View(aux)
library(yaml)
rec = data.frame()
files <- list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE)
for (i in 1:length(files)){
rec_temp <- read_yaml(files[i])
print(files[i])
rec = rbind(rec,data.frame(t(unlist(rec_temp))))
}
rec
install.packages('dplyr','purr')
install.packages('purr')
rec = list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ t(unlist(read_yaml(.))))
rec
library(dplyr)
library(purrr)
library(yaml)
library(dplyr)
rec = list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ t(unlist(read_yaml(.))))
rec
rec = list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ t(unlist(read_yaml(.))))
rec = list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ t(unlist(read_yaml(.))))
rec
rec = data.frame()
rec = list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ t(unlist(read_yaml(.))))
rec
View(rec)
View(rec)
library(dplyr)
library(purrr)
library(yaml)
rec = list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
View(rec)
library(dplyr)
library(purrr)
library(yaml)
rec = list.files(path="./vpa_experiment/first_experiment/logs/bench_0/vpa", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
View(rec)
rec = list.files(path="/vpa_experiment/first_experiment/logs/bench_0/vpa", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
View(rec)
rec = list.files(path="./bench_0/vpa", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
View(rec)
library(dplyr)
library(purrr)
library(yaml)
rec = list.files(path="./vpa_experiment/first_experiment/logs/bench_0/vpa", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
View(rec)
library(dplyr)
library(purrr)
library(yaml)
rec = list.files(path=".", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
library(dplyr)
library(purrr)
library(yaml)
rec = list.files(path="./vpa_experiment/first_experiment/logs/bench_0/vpa", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
library(dplyr)
library(purrr)
library(yaml)
rec = list.files(path="./vpa_experiment/first_experiment/logs/bench_0/vpa", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
View(rec)
library(dplyr)
library(purrr)
library(yaml)
rec = list.files(path="./vpa_experiment/first_experiment/logs/bench_0/vpa", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
rec
View(rec)
warnings()
rec$Upper.Bound.Memory
as.numeric(rec$Upper.Bound.Memory)
firstBenchPD = list.files(path="./vpa_experiment/first_experiment/logs/bench_0/pod-requests", pattern="*.log", full.names=TRUE, recursive=FALSE) %>%
map_df(~ data.frame(t(unlist(read_yaml(.)))))
View(firstBenchPD)
setwd("~/Documents/my-tcc/autoscaling-strategies/hpa")
library(dplyr)
library(ggplot2)
library(jsonlite)
library(magrittr)
library(purrr)
library(readr)
library(stringr)
library(tibble)
library(yaml)
results_dir <- "results"
read_pod_resources <- function(result_dir) {
pods_list <- result_dir %>%
read_json() %>%
extract2("items")
path_names <- str_split(result_dir, .Platform$file.sep) %>%
unlist()
iteration <- tail(path_names, 1) %>%
str_split("(-|\\.)") %>%
unlist() %>%
extract(3) %>%
as.integer()
stage <- tail(path_names, 3)[1] %>%
str_split("-") %>%
unlist() %>%
extract(2) %>%
as.integer()
scenario <- tail(path_names, 4)[1] %>%
str_split("-") %>%
unlist() %>%
extract(2) %>%
as.integer()
pod_resources <- pods_list %>%
map_df(~ unlist(.$spec$containers), .id = "pod_id") %>%
transmute(
file = result_dir,
scenario = paste("scenario", scenario),
stage = paste("stage", stage),
iteration,
pod_id,
cpu_request = parse_number(resources.requests.cpu),
cpu_limit = parse_number(resources.limits.cpu),
mem_request = resources.requests.memory,
mem_limit = resources.limits.memory
)
}
pod_files <- Sys.glob(file.path(results_dir, "scenario-*", "stage-*", "pods-requests", "*.log"))
pods <- pod_files %>%
map_df(read_pod_resources) %>%
mutate(scenario = factor(scenario))
p <- ggplot(pods, aes(iteration, cpu_request, fill = pod_id, group = pod_id)) +
geom_col(position = "stack") +
facet_grid(scenario ~ stage) +
scale_x_continuous(breaks = seq(0, 20, 2))
ggsave("cpu_requests.png", p, width = 10, height = 6)
